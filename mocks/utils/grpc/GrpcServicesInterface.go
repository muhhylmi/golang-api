// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import (
	proto "golang-api/proto"

	mock "github.com/stretchr/testify/mock"
)

// GrpcServicesInterface is an autogenerated mock type for the GrpcServicesInterface type
type GrpcServicesInterface struct {
	mock.Mock
}

// GetBookService provides a mock function with given fields:
func (_m *GrpcServicesInterface) GetBookService() (proto.BookServiceClient, error) {
	ret := _m.Called()

	var r0 proto.BookServiceClient
	var r1 error
	if rf, ok := ret.Get(0).(func() (proto.BookServiceClient, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() proto.BookServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(proto.BookServiceClient)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewGrpcServicesInterface creates a new instance of GrpcServicesInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGrpcServicesInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *GrpcServicesInterface {
	mock := &GrpcServicesInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
